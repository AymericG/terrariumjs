// 1. Set the species attributes
var species = new Species();
species.Name = "Herbie";
species.Skin = AnimalSkin.inchworm; // ant, beetle, inchworm, scorpion or spider
species.MatureSize = 26; // between 24 and 48

// Sum should equal to 100.
species.PercentOfMaximumEnergyPerUnitRadius = 0;
species.PercentOfMaximumEatingSpeedPerUnitOfRadius = 0;
species.PercentOfMaximumAttackDamagePerUnitRadius = 0;
species.PercentOfMaximumDefendDamagePerUnitRadius = 0;
species.PercentOfMaximumEyeSightRadius = 50;
species.PercentOfMaximumSpeed = 0;
species.PercentOfMaximumInvisibleOdds = 50;

// 2. Write the behaviour
// For more information about what functions you can use
// Check out the SDK files: https://github.com/AymericG/terrariumjs/tree/master/app/assets/javascripts/SDK
var me = new AnimalMind(species);

me.OnIdle = function() {

	if (this.TargetPlant != null) 
    {
        // See if our target plant still exists (it may have died)
        // LookFor returns null if it isn't found
        this.TargetPlant = this.LookFor(this.TargetPlant.Id);
    }

	// Our Creature will reproduce as often as possible so
	// every turn it checks CanReproduce to know when it
	// is capable.  If so we call BeginReproduction with
	// a null Dna parameter to being reproduction.
	if (this.CanReproduce())
	{
		this.WriteTrace("Reproducing...");	
		this.BeginReproduction(null);
	}
	// Check to see if we are capable of eating
	// If we are then try to eat or find food,
	// else we'll just stop moving.
	if (this.CanEat() && !this.IsEating())
	{
		// If we have a Target Plant we can try
		// to either eat it, or move towards it.
		// else we'll move to a random vector
		// in search of a plant.
		if (this.TargetPlant != null)
		{
			// If we are within range start eating
			// and stop moving.  Else we'll try
			// to move towards the plant.
			if (this.WithinEatingRange(this.TargetPlant)) 
            {
            	this.WriteTrace("Eating...");	
			
                this.BeginEating(this.TargetPlant);
                if (this.IsMoving()) 
                    this.StopMoving();
            }
            else 
            {
                if (!this.IsMoving()) 
                    this.BeginMoving(new MovementVector(this.TargetPlant.Position, 2));
            }
		}
		else
		{
			// We'll try try to find a target plant
			// If we don't find one we'll move to 
			// a random vector
			if(!this.ScanForTargetPlant()) 
			{
			    if(!this.IsMoving()) 
					this.MoveToRandomPoint();
			}
		}
	}
	else
	{
		// Since we are Full or we are already eating
		// We should stop moving.
		if(this.IsMoving())
		    this.StopMoving();
	}
};

// Looks for target plants, and starts moving towards the first one it finds
me.ScanForTargetPlant = function() 
{
	if (this.State.SeenOrganisms.length == 0)
		this.WriteTrace("I can't see anyone, am I blind?");	
	else
		this.WriteTrace("I can see " + this.State.SeenOrganisms.length + " organism(s)");	


	var minDistance = 9999;
	var closestPlant = null;

	for (var i = 0; i < this.State.SeenOrganisms.length; i++)
	{
		var target = this.State.SeenOrganisms[i];
		if (target.IsPlant()){
			var distanceToPlant = this.State.Position.DistanceWith(target.Position);
			if (distanceToPlant < minDistance)
			{
				minDistance = distanceToPlant;
				closestPlant = target;
			}
		}
	}

	if (closestPlant != null)
	{
		this.TargetPlant = closestPlant;
		this.BeginMoving(new MovementVector(this.TargetPlant.Position, 2));
		return true;
	}

    // Tell the caller we couldn't find a target
    return false;
};

me.TargetPlant = null;

me.OnEatCompleted = function (){ 

};

me.OnMoveCompleted = function (reason, blockerId){

};

me.OnAttacked = function (attackedId){

	this.WriteTrace("I am being attacked! I see " + this.State.SeenOrganisms.length + " potential enemie(s).");	
	var target = this.LookFor(attackedId);
	if (target != null)
	{
		this.WriteTrace("Defending...");
		this.BeginDefending(target);
	}
};

me.MoveToRandomPoint = function(){
	// Pick random point on the map.
	var y = MathUtils.RandomBetween(0, this.World.WorldHeight);
	var x = MathUtils.RandomBetween(0, this.World.WorldWidth);
	this.WriteTrace("Moving to random point...");	
	this.BeginMoving(new MovementVector(new Point(x, y), 2));
};







