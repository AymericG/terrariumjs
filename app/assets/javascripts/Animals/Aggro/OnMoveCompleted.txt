me.OnMoveCompleted = function(reason, blockerId)
{
  this.contourning = false;
  this.randoming = false;
  this.hold_on = false;

  if(reason == ReasonForStop.Blocked && blockerId)
  {
    this.gere_blocked(blockerId);
  }
};
me.gere_blocked = function(blockerId)
{
  var blockingOrganism = this.LookFor(blockerId);
  if (!blockingOrganism.IsPlant())
  {
    if (blocking && blocking.Id == blockingOrganism.Id)
    {
      if (this.IsMoving())
        this.StopMoving();
      this.my_attack(blockingOrganism, false);
      this.hold_on = true;
      return;
    }

    if (blockingOrganism.IsAlive() && 
      !this.IsMySpecies(blockingOrganism) &&
      this.nb_childs >= this.limit_child_attack &&
      this.State.PercentInjured() < this.limit_injured_attack)
    {
      this.blocking = this.blockingOrganism;
      var spe = this.blocking.Species;
      if (!spe.IsCarnivore)
      {
        if (this.State.EnergyState() <= EnergyState.Hungry)
        {
          if (this.IsMoving())
            this.StopMoving();
          this.hold_on = true;
          this.my_attack(this.blocking, false);
          return;
        }
        else
        {
          this.contourne();
          return;
        }
      }
      else
      {
          this.hold_on = false;
          return;
      }
    }
    else
    {
      this.contourne();
      return;
    }
  } // is plant
  else
  {
    if (this.IsMoving())
      this.StopMoving();
    this.hold_on = false;
    return;
  }
  this.contourne();
};
me.contourne = function()
{
  var originalDestination = this.LastDestination;
  var originalVector = originalDestination.Subtract(this.State.Position);
  var newVector = originalVector.Rotate(Math.PI / 4);
  var unitVector = newVector.GetUnitVector();
  var newPositionVector = unitVector.Scale(20);
  var newPosition = this.State.Position.Add(newPositionVector);

  this.contourning = true;
  this.hold_on = true;
  this.LastDestination = newPosition;
  this.BeginMoving(new MovementVector(newPosition, this.random_speed));
};